# Source: airflow/templates/deployments-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow
    component: web
spec:
  replicas: 1
  minReadySeconds: 120
  strategy:
    # Smooth rolling update of the Web UI
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: airflow
      component: web
  template:
    metadata:
      annotations: {}
      labels:
        app: airflow
        component: web
    spec:
      restartPolicy: Always
      serviceAccountName: airflow
      volumes:
        - name: dag-folder
          emptyDir: {}      
        - name: airflow-configmap
          configMap:
            name: airflow-configmap
      containers:
      - name: git-sync
        image: k8s.gcr.io/git-sync:v3.1.5
        volumeMounts:
        - name: dag-folder
          mountPath: /git
        envFrom:
          - configMapRef:
              name: "airflow-env"
        # - name: GIT_SYNC_DEST
        #   value: dags
      - name: web
        image: apache/airflow:1.10.10
        volumeMounts:
        - name: airflow-configmap
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg  
        - name: dag-folder
          mountPath: /opt/airflow
        imagePullPolicy: IfNotPresent
        ports:
          - name: web
            containerPort: 8080
            protocol: TCP
        envFrom:
          - configMapRef:
              name: "airflow-env"
        env:          
          - name: POSTGRES_USER
            value: "postgres"
        command:
          - "bash"
          - "-c"
          - >
            echo 'executing webserver...' &&
            airflow webserver
        livenessProbe:
          httpGet:
            path: "/health"
            port: web
          ## Keep 6 minutes the delay to allow clean wait of postgres and redis containers
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: "/health"
            port: web
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: airflow
    component: web
  name: airflow-web
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: airflow
    component: web
    release: airflow