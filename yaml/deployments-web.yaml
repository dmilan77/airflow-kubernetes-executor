# Source: airflow/templates/deployments-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow
    component: web
    chart: airflow-0.1
    release: airflow
    heritage: Helm
spec:
  replicas: 1
  minReadySeconds: 120
  strategy:
    # Smooth rolling update of the Web UI
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: airflow
      component: web
      release: airflow
  template:
    metadata:
      annotations: {}
      labels:
        app: airflow
        component: web
        release: airflow
    spec:
      restartPolicy: Always
      serviceAccountName: airflow
      containers:
        - name: airflow-web
          image: dmilan/docker-airflow-v2:v1
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: "airflow-env"
          env:          
            - name: POSTGRES_USER
              value: "postgres"
          resources:
            {}
          volumeMounts:
            - name: scripts
              mountPath: /usr/local/scripts
            - mountPath: /usr/local/airflow
              name: synchronised-dags
          args:
            - "bash"
            - "-c"
            - >
              echo 'waiting 20s...' &&
              sleep 20 &&
              mkdir -p /usr/local/airflow/.local/bin &&
              export PATH=/usr/local/airflow/.local/bin:$PATH &&
              echo 'executing webserver...' &&
              airflow webserver
          livenessProbe:
            httpGet:
              path: "/health"
              port: web
            ## Keep 6 minutes the delay to allow clean wait of postgres and redis containers
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/health"
              port: web
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
        # - image: k8s.gcr.io/git-sync:v3.1.1
        #   name: git-sync
      volumes:
        - name: scripts
          configMap:
            name: airflow-scripts
            defaultMode: 0755
        - name: dags-data
          emptyDir: {}
        - emptyDir: {}
          name: synchronised-dags
